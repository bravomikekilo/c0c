// 程序主要是一个 八皇后问题的求解和递归斐波那契数列,最后是一个平方求和

const int true = 1;
const int false = 0;

const int bound = +8;

int p[64];  // 棋盘数组
int cnt;     //记录解的个数
             //判断(r,c)位置能否放置棋子,能,返回true,不能返回false
             //因为是从第一行开始往下放棋子，所以只需要判断r行之前的行中有没有棋子使得(r,c)不可落子即可

// 设置棋子
void set(int r, int c, int v) {
    p[r * 8 + c] = v;
    return;
}

int get(int r, int c) {
    return (p[r * 8 + c]);
}


int can(int r, int c)
{
    int i, rr, rc; // 临时纵坐标(行数) 临时横坐标(列数)
    for (i = 0; i < r; i = i + 1)
    {
        //判断同一列中是否有棋子，有则返回false
        if (get(i, c) == 1)
            return (false);
    }
    for (i = 1; i <= r; i = i + 1)
    { //判断(r,c)左上方是否有棋子使(r,c)处不可落子
        rr = r - i;
        rc = c - i;
        if (rr >= 0) {
            if(rc >= 0) {
                if (get(rr, rc) == 1)
                    return (false);
            }
        }
    }

    for (i = 1; i <= r; i = i + 1)
    { //判断(r,c)右上方是否有棋子使(r,c)处不可落子
        rr = r - i;
        rc = c + i;
        if (rr >= 0)
        {
            if(rc <= 7)
            {
                if(get(rr, rc) == 1)
                    return (false);
            }
        }
    }
    return (true);
} //显示各个结果
